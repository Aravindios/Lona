// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

var List                             = require("bs-platform/lib/js/list.js");
var Block                            = require("bs-platform/lib/js/block.js");
var Curry                            = require("bs-platform/lib/js/curry.js");
var Layer$LonaCompilerCore           = require("../core/layer.bs.js");
var Logic$LonaCompilerCore           = require("../core/logic.bs.js");
var Decode$LonaCompilerCore          = require("../core/decode.bs.js");
var StringMap$LonaCompilerCore       = require("../containers/stringMap.bs.js");
var JavaScriptAst$LonaCompilerCore   = require("./javaScriptAst.bs.js");
var JavaScriptLogic$LonaCompilerCore = require("./javaScriptLogic.bs.js");

function createStyleAttributeAST(layerName, styles) {
  return /* JSXAttribute */Block.__(7, [{
              name: "style",
              value: /* ArrayLiteral */Block.__(13, [/* :: */[
                    /* Identifier */Block.__(2, [/* :: */[
                          "styles",
                          /* :: */[
                            layerName,
                            /* [] */0
                          ]
                        ]]),
                    /* :: */[
                      /* ObjectLiteral */Block.__(14, [Layer$LonaCompilerCore.mapBindings((function (param) {
                                  return /* Property */Block.__(15, [{
                                              key: /* Identifier */Block.__(2, [/* :: */[
                                                    param[0],
                                                    /* [] */0
                                                  ]]),
                                              value: JavaScriptLogic$LonaCompilerCore.logicValueToJavaScriptAST(param[1])
                                            }]);
                                }), styles)]),
                      /* [] */0
                    ]
                  ]])
            }]);
}

function layerToJavaScriptAST(variableMap, layer) {
  var match = Layer$LonaCompilerCore.splitParamsMap(Layer$LonaCompilerCore.parameterMapToLogicValueMap(layer[/* parameters */2]));
  var match$1 = Layer$LonaCompilerCore.LayerMap[/* find_opt */24](layer, variableMap);
  var match$2 = Layer$LonaCompilerCore.splitParamsMap(match$1 ? match$1[0] : StringMap$LonaCompilerCore.empty);
  var main = StringMap$LonaCompilerCore.assign(match[1], match$2[1]);
  var styleAttribute = createStyleAttributeAST(layer[/* name */1], match$2[0]);
  var attributes = Layer$LonaCompilerCore.mapBindings((function (param) {
          return /* JSXAttribute */Block.__(7, [{
                      name: param[0],
                      value: JavaScriptLogic$LonaCompilerCore.logicValueToJavaScriptAST(param[1])
                    }]);
        }), main);
  return /* JSXElement */Block.__(8, [{
              tag: Layer$LonaCompilerCore.layerTypeToString(layer[/* typeName */0]),
              attributes: /* :: */[
                styleAttribute,
                attributes
              ],
              content: List.map((function (param) {
                      return layerToJavaScriptAST(variableMap, param);
                    }), layer[/* children */3])
            }]);
}

function toJavaScriptStyleSheetAST(layer) {
  var createStyleObjectForLayer = function (layer) {
    var styleParams = Curry._2(StringMap$LonaCompilerCore.filter, (function (key, _) {
            return Layer$LonaCompilerCore.parameterIsStyle(key);
          }), layer[/* parameters */2]);
    return /* Property */Block.__(15, [{
                key: /* Identifier */Block.__(2, [/* :: */[
                      layer[/* name */1],
                      /* [] */0
                    ]]),
                value: /* ObjectLiteral */Block.__(14, [List.map((function (param) {
                            return /* Property */Block.__(15, [{
                                        key: /* Identifier */Block.__(2, [/* :: */[
                                              param[0],
                                              /* [] */0
                                            ]]),
                                        value: /* Literal */Block.__(1, [param[1]])
                                      }]);
                          }), Curry._1(StringMap$LonaCompilerCore.bindings, styleParams))])
              }]);
  };
  var styleObjects = List.map(createStyleObjectForLayer, Layer$LonaCompilerCore.flatten(layer));
  return /* VariableDeclaration */Block.__(9, [/* AssignmentExpression */Block.__(10, [{
                  left: /* Identifier */Block.__(2, [/* :: */[
                        "styles",
                        /* [] */0
                      ]]),
                  right: /* CallExpression */Block.__(6, [{
                        callee: /* Identifier */Block.__(2, [/* :: */[
                              "StyleSheet",
                              /* :: */[
                                "create",
                                /* [] */0
                              ]
                            ]]),
                        arguments: /* :: */[
                          /* ObjectLiteral */Block.__(14, [styleObjects]),
                          /* [] */0
                        ]
                      }])
                }])]);
}

function generate(name, getComponent, json) {
  var rootLayer = Decode$LonaCompilerCore.Component[/* rootLayer */1](getComponent, json);
  var logic = Logic$LonaCompilerCore.addVariableDeclarations(Decode$LonaCompilerCore.Component[/* logic */2](json));
  var assignments = Layer$LonaCompilerCore.parameterAssignmentsFromLogic(rootLayer, logic);
  var rootLayerAST = layerToJavaScriptAST(assignments, rootLayer);
  var styleSheetAST = toJavaScriptStyleSheetAST(rootLayer);
  var logicAST = JavaScriptAst$LonaCompilerCore.optimize(JavaScriptLogic$LonaCompilerCore.toJavaScriptAST(logic));
  return JavaScriptAst$LonaCompilerCore.prepareForRender(/* Program */Block.__(18, [/* :: */[
                  /* ClassDeclaration */Block.__(3, [{
                        id: name,
                        superClass: /* Some */["React.Component"],
                        body: /* :: */[
                          /* MethodDefinition */Block.__(4, [{
                                key: "render",
                                value: /* FunctionExpression */Block.__(5, [{
                                      id: /* None */0,
                                      params: /* [] */0,
                                      body: /* :: */[
                                        logicAST,
                                        /* :: */[
                                          /* Return */Block.__(0, [rootLayerAST]),
                                          /* [] */0
                                        ]
                                      ]
                                    }])
                              }]),
                          /* [] */0
                        ]
                      }]),
                  /* :: */[
                    /* Empty */0,
                    /* :: */[
                      styleSheetAST,
                      /* [] */0
                    ]
                  ]
                ]]));
}

var Ast = 0;

var Render = 0;

exports.Ast                       = Ast;
exports.Render                    = Render;
exports.createStyleAttributeAST   = createStyleAttributeAST;
exports.layerToJavaScriptAST      = layerToJavaScriptAST;
exports.toJavaScriptStyleSheetAST = toJavaScriptStyleSheetAST;
exports.generate                  = generate;
/* Layer-LonaCompilerCore Not a pure module */
